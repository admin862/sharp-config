<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<http pattern="/static/**" security="none" />
	<http auto-config="true" use-expressions="true" request-matcher="regex">
		<headers>
			<frame-options policy="SAMEORIGIN" />
		</headers>
		<access-denied-handler error-page="/403" />

		<intercept-url pattern="/admin" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_FUND','ROLE_TRADE','ROLE_BASIC','ROLE_LEND','ROLE_MAIL')" />
		<intercept-url pattern="/admin/environment/.*" access="hasAnyRole('ROLE_ADMIN')" />

		<intercept-url pattern="/admin/groupInfo/deleteGroupById.*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/groupInfo/.*" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_FUND','ROLE_TRADE','ROLE_BASIC','ROLE_LEND','ROLE_MAIL')" />

		<intercept-url pattern="/admin/appInfo/deleteAppById.*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/appInfo/.*" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_FUND','ROLE_TRADE','ROLE_BASIC','ROLE_LEND','ROLE_MAIL')" />

		<intercept-url pattern="/admin/config/deleteConfigById.*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/config/.*" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_FUND','ROLE_TRADE','ROLE_BASIC','ROLE_LEND','ROLE_MAIL')" />

		<intercept-url pattern="/admin/zookeeper/getDataView.*" access="hasRole('ROLE_ADMIN')" />

		<intercept-url pattern="/admin/audit/diff" access="hasAnyRole('ROLE_ADMIN','ROLE_USER','ROLE_FUND','ROLE_TRADE','ROLE_BASIC','ROLE_LEND','ROLE_MAIL')" />
		<intercept-url pattern="/admin/audit/*list" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/audit/operate" access="hasRole('ROLE_ADMIN')" />


		<form-login login-page="/login" authentication-failure-url="/login?error"
			username-parameter="username" password-parameter="password"
			default-target-url="/admin" always-use-default-target="true" />
		<logout invalidate-session="true" logout-success-url="/" logout-url="/logout"
			delete-cookies="JSESSIONID" />
		<csrf disabled="true" />
	</http>

	<beans:bean id="userRoleService" class="com.dafy.config.service.UserRoleService" />
	<beans:bean id="securityUserDetailService" class="com.dafy.config.security.SecurityUserDetailService" />
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="username" />
	</beans:bean>
	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="securityUserDetailService" />
		<beans:property name="passwordEncoder" ref="passwordEncoder" />
		<beans:property name="saltSource" ref="saltSource" />
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

</beans:beans>